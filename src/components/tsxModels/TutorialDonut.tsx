/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Donut: THREE.Mesh
    Icing001: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

export default function TutorialDonut(props: JSX.IntrinsicElements['group']) {

  function onClick() {
    alert("HELLO!")
  }

  const [hover, setHover] = useState(false);

  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('assets/models/tutorialDonut.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Donut.geometry}
        material={materials.Material}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        onClick={onClick}
        onPointerOver={(event) => setHover(true)}
        onPointerOut={(event) => setHover(false)}
        scale={ (hover)? [32, 32, 32] : [30, 30, 30]}>
        <mesh geometry={nodes.Icing001.geometry} material={materials['Material.002']} position={[0, 0, 0]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/assets/models/tutorialDonut.glb')
